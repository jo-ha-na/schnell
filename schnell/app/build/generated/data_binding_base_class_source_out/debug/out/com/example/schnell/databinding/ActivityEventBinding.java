// Generated by view binder compiler. Do not edit!
package com.example.schnell.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.schnell.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEventBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnAddEvent;

  @NonNull
  public final Button btnShowAllEvents;

  @NonNull
  public final RecyclerView recyclerViewEvents;

  @NonNull
  public final TextView textViewDate;

  private ActivityEventBinding(@NonNull RelativeLayout rootView, @NonNull Button btnAddEvent,
      @NonNull Button btnShowAllEvents, @NonNull RecyclerView recyclerViewEvents,
      @NonNull TextView textViewDate) {
    this.rootView = rootView;
    this.btnAddEvent = btnAddEvent;
    this.btnShowAllEvents = btnShowAllEvents;
    this.recyclerViewEvents = recyclerViewEvents;
    this.textViewDate = textViewDate;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddEvent;
      Button btnAddEvent = ViewBindings.findChildViewById(rootView, id);
      if (btnAddEvent == null) {
        break missingId;
      }

      id = R.id.btnShowAllEvents;
      Button btnShowAllEvents = ViewBindings.findChildViewById(rootView, id);
      if (btnShowAllEvents == null) {
        break missingId;
      }

      id = R.id.recyclerViewEvents;
      RecyclerView recyclerViewEvents = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewEvents == null) {
        break missingId;
      }

      id = R.id.textViewDate;
      TextView textViewDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewDate == null) {
        break missingId;
      }

      return new ActivityEventBinding((RelativeLayout) rootView, btnAddEvent, btnShowAllEvents,
          recyclerViewEvents, textViewDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
